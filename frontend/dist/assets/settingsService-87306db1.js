import{c as h}from"./index-bcd0f302.js";class D{constructor(){this.cache=new Map,this.cacheExpiry=new Map,this.CACHE_DURATION=5*60*1e3}_getCachedData(a){const t=Date.now(),e=this.cacheExpiry.get(a);return e&&t<e?this.cache.get(a):(this.cache.delete(a),this.cacheExpiry.delete(a),null)}_setCachedData(a,t){this.cache.set(a,t),this.cacheExpiry.set(a,Date.now()+this.CACHE_DURATION)}clearCache(){this.cache.clear(),this.cacheExpiry.clear()}async getAllSettings(){const a=this._getCachedData("all_settings");if(a)return a;try{const e=(await h.getSettings()).data;return this._setCachedData("all_settings",e),e}catch(t){return console.error("Failed to get settings:",t),{}}}async getWeekStartDate(){var t,e;const a=this._getCachedData("week_start_date");if(a)return new Date(a);try{const s=(e=(t=(await this.getAllSettings()).general)==null?void 0:t.system_config)==null?void 0:e.weekStartDate;if(s)return this._setCachedData("week_start_date",s),new Date(s);const c=new Date,n=c.getDay(),o=n===0?6:n-1,i=new Date(c);return i.setDate(c.getDate()-o),i}catch(r){console.error("Failed to get week start date:",r);const s=new Date,c=s.getDay(),n=c===0?6:c-1,o=new Date(s);return o.setDate(s.getDate()-n),o}}async getWorkDays(){var t,e;const a=this._getCachedData("work_days");if(a)return a;try{const s=(e=(t=(await this.getAllSettings()).general)==null?void 0:t.system_config)==null?void 0:e.workDays;if(s&&Array.isArray(s))return this._setCachedData("work_days",s),s;const c=["1","2","3","4","5"];return this._setCachedData("work_days",c),c}catch(r){return console.error("Failed to get work days:",r),["1","2","3","4","5"]}}async calculateWeekStart(a){try{const t=await this.getWeekStartDate(),e=new Date(a),r=Math.floor((e-t)/(1e3*60*60*24)),s=Math.floor(r/7),c=new Date(t);return c.setDate(t.getDate()+s*7),c}catch(t){console.error("Failed to calculate week start:",t);const e=new Date(a),r=e.getDay(),s=e.getDate()-r+(r===0?-6:1);return new Date(e.setDate(s))}}async isWorkDay(a){try{const t=await this.getWorkDays(),e=a.getDay(),r=e===0?"7":e.toString();return t.includes(r)}catch(t){console.error("Failed to check work day:",t);const e=a.getDay();return e>=1&&e<=5}}async getWorkDaysInWeek(a){try{const t=await this.getWorkDays(),e=[];for(let r=0;r<7;r++){const s=new Date(a);s.setDate(a.getDate()+r);const c=s.getDay(),n=c===0?"7":c.toString();t.includes(n)&&e.push(s)}return e}catch(t){return console.error("Failed to get work days in week:",t),[]}}async refreshSettings(){this.clearCache(),await this.getAllSettings()}}const d=new D;export{d as s};
